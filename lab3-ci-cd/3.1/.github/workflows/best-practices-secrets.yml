name: Best Practices CI/CD + Secrets

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-22.04

    steps:
      - name: Check code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: pytest

  deploy:
    runs-on: ubuntu-22.04
    needs: test

    steps:
      - name: Check code
        uses: actions/checkout@v3

      - name: Bitwarden install
        run: |
          curl -L https://github.com/bitwarden/cli/releases/download/v1.20.0/bw-linux-1.20.0.zip -o bw-cli.zip
          unzip bw-cli.zip
          sudo mv bw /usr/local/bin/
          sudo chmod +x /usr/local/bin/bw

      - name: Bitwarden Authentication
        env:
          BW_CLIENTID: ${{ secrets.BW_CLIENTID }}
          BW_CLIENTSECRET: ${{ secrets.BW_CLIENTSECRET }}
          BW_MASTER_PASSWORD: ${{ secrets.BW_MASTER_PASSWORD }}
        run: |
          bw login --apikey --quiet
          export BW_SESSION=$(bw unlock --raw $BW_MASTER_PASSWORD)

      - name: Getting API
        env:
          BW_SESSION: ${{ env.BW_SESSION }}
        run: |
          export API_KEY=$(bw get item "API_KEY" | jq -r '.login.password' 2>/dev/null)

      - name: Deploy
        env:
          API_KEY: ${{ env.API_KEY }}
        run: |
          ./deploy.sh